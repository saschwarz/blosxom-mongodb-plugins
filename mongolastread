# Blosxom Plugin: mongolastread -*- perl -*-
# Author: Steve Schwarz <http://agilitynerd.com/>
# 2010-May-15 0.1 initial version.

package mongolastread;

#
# Plugin to report the last stories directly accessed by users.
# Uses data stored by the mongohitcounter plugin.
#
# -- Configuration --
#
# Connection to Mongo database
my $host = '127.0.0.1';
my $port = 27017;
my $db_name = 'hitcounts';
my $collection_name = 'websitename';

# How many articles to maintain in the list:
my $num_displayed = 10;
# What flavour should be used in the generated link:
my $link_flavour = "html";

# Ignore all page loads via these agents:
@ignore_agents = ('Googlebot', 'Mediapartners', 'Feedfetcher',
		  'msnbot', 'Yahoo! Slurp', 'Attentio', 'IRLbot',
		  'Twiceler', 'StackRambler', 'Java', 'Topix.net',
		  'speedyspider', 'scout', 'moreover', 'voila',
		  'Technorati', 'kinjabot', 'Magpie', 'Gigabot',
		  'cazoodle', 'bot.bot', 'voyager', 'yetibot',
		  'sogou', 'topicblogs', 'fastsearch' );

# use $mongolastread::links to get the last $num_displayed links
# The work is done in the head() in you can put $mongolastread::links in your head.flavour file
$mongolastread::links = "";

#
# -------------------
use CGI qw/:standard/;
use MongoDB;
#use strict;
#use warnings;

sub start {
    # Add filters here to not increment for specific urls or flavours
    # This filter ignores the rss, atom, trackback feed variants I provide
    return (($blosxom::flavour =~ /rss/ or
 	     $blosxom::flavour eq 'atom' or
 	     $blosxom::flavour eq 'trackback') ? 0 : 1);
}

sub head {
    my($pkg, $path, $head_ref) = @_;

    $path = '/' if (!$path);	# convert root path to "/"

    # Ignore reads from bots
    my $agent = $ENV{'HTTP_USER_AGENT'};
    foreach my $ignore (@mongolastread::ignore_agents) {
	return 0 if ($agent =~ /$ignore/);
    }

    my $connection = MongoDB::Connection->new(host => $host, port => $port);
    my $db = $connection->get_database($db_name);
    my $collection = $db->get_collection($collection_name);

    my @array = ();
    my $select = {title => {'$ne' => ''}};
    my $query = $collection->query($select)->sort({updated=>-1})->limit($num_displayed);
    while (my $obj = $query->next){
	my $url = $obj->{'url'};
	my $title = $obj->{'title'};
	my $date = $obj->{'updated'};
	$title =~ s/\s*$//; # trim trailing whitespace (i.e. DOS newline on UNIX)
	$title =~ s/\"/&quot;/g;
	push(@array, "<div style=\"padding:2px;\"><a href=\"$blosxom::url/$url\.$link_flavour\">$title</a></div>");
    }
    $mongolastread::links = join("", @array);
    return 1;
}

1;

__END__

=head1 LICENSE

This Blosxom Plug-in
Copyright 2010, Steve Schwarz

(This license is the same as Blosxom's)

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
1;
