# Blosxom Plugin: mongofavorites -*- perl -*-
# Author(s): Steve Schwarz <http://agilitynerd.com/>
# 2010-MAY-15	0.1 initial version.
# Generate HTML <ul> list of most visited pages ordered by
# frequency and optionally grouped by categories.
# Requires data file generated by the mongohitcounter plugin.

package mongofavorites;

# -- Configuration --
#
# Connection to Mongo database
my $host = '127.0.0.1';
my $port = 27017;
my $db_name = 'hitcounts';
my $collection_name = 'websitename';

# How many URLs to include in $count
my $num_entries = 20;

# Include hit count with URL?
my $include_counts = 1;		# set to 1 or 0

# Include directories/categories?
my $include_categories = 0;	# set to 1 or 0

# Wrap URL with <a></a>
# 0 - text isn't wrapped with an anchor
# 1 - text is wrapped with an anchor
my $anchor_link = 1;	# 0 or 1

# Array of URL regexps to exclude from the output
my @excludes = ('^static'); #( '^\/$' );	# i.e. exclude root

# Array of URL regexps to use to group results into <ul>s of $num_entries each:
# my @groups = ( '^.*$' );	# default matches all - makes one group
# Here is an example of two top level categories on my site
# Having more than one entry in @groups causes a title to be created
my @groups = ([qr/^\/agility/, 'agility'],
	      [qr/^\/dog/, 'dog'],
	      [qr/^\/flyball/, 'flyball'],
	      [qr/^\/journal/, 'journal'] );

# Flavor to use for file URLs
my $url_flavour = 'html'; # you might want = $blosxom::default_flavor;
# -------------------

use CGI qw/:standard/;
use MongoDB;
#use strict;
#use warnings;


$mongofavorites::count = "";	# use $mongofavorites::count to get HTML of paths and counts

sub start {
    # Add/change filters here to not calculate favorities for specific urls/flavours/etc.
    # i.e. A flavour suffix of 'fav' or a CGI param of 'fav' enables this plugin.
    # return 1 if ($blosxom::flavour =~ /fav/ or CGI::param('fav'));
    return 1 if ($blosxom::path_info =~ /Favorites/);
    return 0;	# disabled
}

sub head {
    my($pkg, $path, $body_ref) = @_;

    my $connection = MongoDB::Connection->new(host => $host, port => $port);
    my $db = $connection->get_database($db_name);
    my $collection = $db->get_collection($collection_name);

    my @array = ();
    # Edit the generated HTML in place here...
    foreach my $group_group (@groups) {
	# You will want to edit this HTML:
	my $group = @$group_group[0];
	my $group_name = @$group_group[1];
	push(@array, "<h2>Top $num_entries for Category: $group_name</h2>") if ($#groups != 0);
 	push(@array, '<ul>');

 	my $entries = 0;
 	# Now iterate hash sorted from highest to lowest.
 	my $select = {url => $group, title =>  {'$ne' => ''}};
 	$select = {url=>$group} if ($include_categories);
 	my $query = $collection->query($select)->sort({hits=>-1})->limit($num_entries);
 	while (my $obj = $query->next){
 	    my $url = $obj->{'url'};
 	    my $title = $obj->{'title'};
	    if (not defined($title)){
		if ($include_categories == 0){
		    next;
		}
		$title = $url;
	    } else {
		$url .= "." . $url_flavour;
	    }
	    $title =~ s/\s*$//; # trim trailing whitespace (i.e. DOS newline on UNIX)
	    $title =~ s/\"/&quot;/g;
 	    my $hits = $obj->{'hits'};
  	    push(@array, '<li>');
 	    push(@array,  "<a href=\"$blosxom::url/$url\" title=\"$title\">") if (1 == $anchor_link);
 	    push(@array, $title);
 	    push(@array, " - $hits visits") if ($include_counts == 1);
 	    push(@array, '</a>') if (1 == $anchor_link);
 	    push(@array, '</li>');
 	}
	push(@array, '</ul>');
    }				# while group
    $mongofavorites::count = join("", @array);
    return 1;
}

1;

__END__

=head1 LICENSE

this Blosxom Plug-in
Copyright 2010, Steve Schwarz

(This license is the same as Blosxom's)

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
